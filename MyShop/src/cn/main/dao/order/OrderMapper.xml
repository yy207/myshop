<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.main.dao.order.OrderMapper">
	<select id="getOrderList" resultType="Order">
		SELECT `id`,`uid`,sid,gid,number,`orderCode`,`createTime`,`price`,endTime
			,`state`,`logidtics` FROM `order`
			<trim prefix="where" prefixOverrides="and | or">
				<if test="id!=null">
					and id = #{id}
				</if>
				<if test="uid != null">
					and uid = #{uid}
				</if>
				<if test="sid != null">
					and sid = #{sid}
				</if>
				<if test="gid != null">
					and gid = #{gid}
				</if>
				<if test="number != null">
					and number = #{number}
				</if>
				<if test="orderCode !=null and orderCode != ''">
					and orderCode like concat('%',#{orderCode},'%')
				</if>
				<if test="alipayCode !=null and alipayCode != ''">
					and alipayCode like concat('%',#{alipayCode},'%')
				</if>
				<if test="createTime !=null and endTime !=null">
					and createTime  BETWEEN #{createTime} AND #{endTime}
				</if>
				<if test="price != null">
					and price BETWEEN  FLOOR(#{price})  AND CEIL(#{price})
				</if>
				<if test="state!=null">
					and state = #{state}
				</if>
				<if test="logidtics!=null and logidtics!=''">
					and logidtics = #{logidtics}
				</if> 
			</trim> 
			order by id desc ,createTime desc
				<if test="from != null and pageSize != null">
					limit #{from},#{pageSize}
				</if> 
	</select>
	<insert id="addOrder">
		INSERT INTO `order` (`uid`,`orderCode`,`sid`,`gid`,`number`,
			`price`,`logidtics`,address,remark)
		VALUES(#{order.uid},#{order.orderCode},#{order.sid},#{order.gid},#{order.number},#{order.price},#{order.logidtics},#{order.address},#{order.remark});
	</insert> 
	<update id="updateOrder"> 
		UPDATE 	`order` SET state =#{state} WHERE orderCode = #{orderCode}	 
	</update>
	<update id="deleteOrder"> 
		delete from `order` WHERE id = #{id}	 
	</update>
	
	<update id="updateOrderAll"> 
		UPDATE 	`order` 
		<trim prefix="SET" suffixOverrides="," suffix="where orderCode =#{order.orderCode}">
			<if test="order.address!=null">
				address = #{order.address},
			</if>
			<if test="order.alipayCode!=null">
				alipayCode =#{order.alipayCode},
			</if>
			<if test="order.state!=null">
				state =#{order.state},
			</if>
			
		</trim>
		
	

	</update>
</mapper>





